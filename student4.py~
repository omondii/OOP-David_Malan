#!/usr/bin/python3
class Student:
    def __init__(self, name, house, patronus):
        if not name:
            raise ValueError ("Missing Name")
        if house not in ["Gryffindor", "Hufflepuff", "Ravenclaw", "Slytherin"]:
            raise ValueError ("Wrong House!")
        self.name = name
        self.house = house
        self.patronus = patronus

    def __str__(self):
        return f"{self.name} from {self.house}"

    """Lets create a method that will return an emoji for each students patronus
    """
    def charm(self):
        match self.patronus:
           case "Stag":
               return "🐴"
           case "Otter":
               return "🦦"
           case "Jack Russel terrier":
               return "🦊"
           case _:
               return "🦴"


def main():
    student = get_student
    print("Expecto patronum")
    print(student.charm())

def get_student():
    name = input("Name: ")
    house = input("House: ")
    return Student(name, house)


if __name__ == "__main__":
    main()


"""
The real power of classes and oop in general is the ability to create ad define
our own methods.
"""
